#include "Constants.hpp"

const char *syscall_name[] = {
	"SYS_read",
	"SYS_write",
	"SYS_open",
	"SYS_close",
	"SYS_newstat",
	"SYS_newfstat",
	"SYS_newlstat",
	"SYS_poll",
	"SYS_lseek",
	"SYS_mmap",
	"SYS_mprotect",
	"SYS_munmap",
	"SYS_brk",
	"SYS_rt_sigaction",
	"SYS_rt_sigprocmask",
	"SYS_rt_sigreturn",
	"SYS_ioctl",
	"SYS_pread64",
	"SYS_pwrite64",
	"SYS_readv",
	"SYS_writev",
	"SYS_access",
	"SYS_pipe",
	"SYS_select",
	"SYS_sched_yield",
	"SYS_mremap",
	"SYS_msync",
	"SYS_mincore",
	"SYS_madvise",
	"SYS_shmget",
	"SYS_shmat",
	"SYS_shmctl",
	"SYS_dup",
	"SYS_dup2",
	"SYS_pause",
	"SYS_nanosleep",
	"SYS_getitimer",
	"SYS_alarm",
	"SYS_setitimer",
	"SYS_getpid",
	"SYS_sendfile64",
	"SYS_socket",
	"SYS_connect",
	"SYS_accept",
	"SYS_sendto",
	"SYS_recvfrom",
	"SYS_sendmsg",
	"SYS_recvmsg",
	"SYS_shutdown",
	"SYS_bind",
	"SYS_listen",
	"SYS_getsockname",
	"SYS_getpeername",
	"SYS_socketpair",
	"SYS_setsockopt",
	"SYS_getsockopt",
	"SYS_clone",
	"SYS_fork",
	"SYS_vfork",
	"SYS_execve",
	"SYS_exit",
	"SYS_wait4",
	"SYS_kill",
	"SYS_newuname",
	"SYS_semget",
	"SYS_semop",
	"SYS_semctl",
	"SYS_shmdt",
	"SYS_msgget",
	"SYS_msgsnd",
	"SYS_msgrcv",
	"SYS_msgctl",
	"SYS_fcntl",
	"SYS_flock",
	"SYS_fsync",
	"SYS_fdatasync",
	"SYS_truncate",
	"SYS_ftruncate",
	"SYS_getdents",
	"SYS_getcwd",
	"SYS_chdir",
	"SYS_fchdir",
	"SYS_rename",
	"SYS_mkdir",
	"SYS_rmdir",
	"SYS_creat",
	"SYS_link",
	"SYS_unlink",
	"SYS_symlink",
	"SYS_readlink",
	"SYS_chmod",
	"SYS_fchmod",
	"SYS_chown",
	"SYS_fchown",
	"SYS_lchown",
	"SYS_umask",
	"SYS_gettimeofday",
	"SYS_getrlimit",
	"SYS_getrusage",
	"SYS_sysinfo",
	"SYS_times",
	"SYS_ptrace",
	"SYS_getuid",
	"SYS_syslog",
	"SYS_getgid",
	"SYS_setuid",
	"SYS_setgid",
	"SYS_geteuid",
	"SYS_getegid",
	"SYS_setpgid",
	"SYS_getppid",
	"SYS_getpgrp",
	"SYS_setsid",
	"SYS_setreuid",
	"SYS_setregid",
	"SYS_getgroups",
	"SYS_setgroups",
	"SYS_setresuid",
	"SYS_getresuid",
	"SYS_setresgid",
	"SYS_getresgid",
	"SYS_getpgid",
	"SYS_setfsuid",
	"SYS_setfsgid",
	"SYS_getsid",
	"SYS_capget",
	"SYS_capset",
	"SYS_rt_sigpending",
	"SYS_rt_sigtimedwait",
	"SYS_rt_sigqueueinfo",
	"SYS_rt_sigsuspend",
	"SYS_sigaltstack",
	"SYS_utime",
	"SYS_mknod",
	"SYS_obsolete",
	"SYS_personality",
	"SYS_ustat",
	"SYS_statfs",
	"SYS_fstatfs",
	"SYS_sysfs",
	"SYS_getpriority",
	"SYS_setpriority",
	"SYS_sched_setparam",
	"SYS_sched_getparam",
	"SYS_sched_setscheduler",
	"SYS_sched_getscheduler",
	"SYS_sched_get_priority_max",
	"SYS_sched_get_priority_min",
	"SYS_sched_rr_get_interval",
	"SYS_mlock",
	"SYS_munlock",
	"SYS_mlockall",
	"SYS_munlockall",
	"SYS_vhangup",
	"SYS_modify_ldt",
	"SYS_pivot_root",
	"SYS_sysctl",
	"SYS_prctl",
	"SYS_arch_prctl",
	"SYS_adjtimex",
	"SYS_setrlimit",
	"SYS_chroot",
	"SYS_sync",
	"SYS_acct",
	"SYS_settimeofday",
	"SYS_mount",
	"SYS_umount",
	"SYS_swapon",
	"SYS_swapoff",
	"SYS_reboot",
	"SYS_sethostname",
	"SYS_setdomainname",
	"SYS_iopl",
	"SYS_ioperm",
	"SYS_obsolete",
	"SYS_init_module",
	"SYS_delete_module",
	"SYS_obsolete",
	"SYS_obsolete",
	"SYS_quotactl",
	"SYS_obsolete",
	"SYS_obsolete",
	"SYS_obsolete",
	"SYS_obsolete",
	"SYS_obsolete",
	"SYS_obsolete",
	"SYS_gettid",
	"SYS_readahead",
	"SYS_setxattr",
	"SYS_lsetxattr",
	"SYS_fsetxattr",
	"SYS_getxattr",
	"SYS_lgetxattr",
	"SYS_fgetxattr",
	"SYS_listxattr",
	"SYS_llistxattr",
	"SYS_flistxattr",
	"SYS_removexattr",
	"SYS_lremovexattr",
	"SYS_fremovexattr",
	"SYS_tkill",
	"SYS_time",
	"SYS_futex",
	"SYS_sched_setaffinity",
	"SYS_sched_getaffinity",
	"SYS_obsolete",
	"SYS_io_setup",
	"SYS_io_destroy",
	"SYS_io_getevents",
	"SYS_io_submit",
	"SYS_io_cancel",
	"SYS_obsolete",
	"SYS_lookup_dcookie",
	"SYS_epoll_create",
	"SYS_obsolete",
	"SYS_obsolete",
	"SYS_remap_file_pages",
	"SYS_getdents64",
	"SYS_set_tid_address",
	"SYS_restart_syscall",
	"SYS_semtimedop",
	"SYS_fadvise64",
	"SYS_timer_create",
	"SYS_timer_settime",
	"SYS_timer_gettime",
	"SYS_timer_getoverrun",
	"SYS_timer_delete",
	"SYS_clock_settime",
	"SYS_clock_gettime",
	"SYS_clock_getres",
	"SYS_clock_nanosleep",
	"SYS_exit_group",
	"SYS_epoll_wait",
	"SYS_epoll_ctl",
	"SYS_tgkill",
	"SYS_utimes",
	"SYS_obsolete",
	"SYS_mbind",
	"SYS_set_mempolicy",
	"SYS_get_mempolicy",
	"SYS_mq_open",
	"SYS_mq_unlink",
	"SYS_mq_timedsend",
	"SYS_mq_timedreceive",
	"SYS_mq_notify",
	"SYS_mq_getsetattr",
	"SYS_kexec_load",
	"SYS_waitid",
	"SYS_add_key",
	"SYS_request_key",
	"SYS_keyctl",
	"SYS_ioprio_set",
	"SYS_ioprio_get",
	"SYS_inotify_init",
	"SYS_inotify_add_watch",
	"SYS_inotify_rm_watch",
	"SYS_migrate_pages",
	"SYS_openat",
	"SYS_mkdirat",
	"SYS_mknodat",
	"SYS_fchownat",
	"SYS_futimesat",
	"SYS_newfstatat",
	"SYS_unlinkat",
	"SYS_renameat",
	"SYS_linkat",
	"SYS_symlinkat",
	"SYS_readlinkat",
	"SYS_fchmodat",
	"SYS_faccessat",
	"SYS_pselect6",
	"SYS_ppoll",
	"SYS_unshare",
	"SYS_set_robust_list",
	"SYS_get_robust_list",
	"SYS_splice",
	"SYS_tee",
	"SYS_sync_file_range",
	"SYS_vmsplice",
	"SYS_move_pages",
	"SYS_utimensat",
	"SYS_epoll_pwait",
	"SYS_signalfd",
	"SYS_timerfd_create",
	"SYS_eventfd",
	"SYS_fallocate",
	"SYS_timerfd_settime",
	"SYS_timerfd_gettime",
	"SYS_accept4",
	"SYS_signalfd4",
	"SYS_eventfd2",
	"SYS_epoll_create1",
	"SYS_dup3",
	"SYS_pipe2",
	"SYS_inotify_init1",
	"SYS_preadv",
	"SYS_pwritev",
	"SYS_rt_tgsigqueueinfo",
	"SYS_perf_event_open",
	"SYS_recvmmsg",
	"SYS_fanotify_init",
	"SYS_fanotify_mark",
	"SYS_prlimit64",
	"SYS_name_to_handle_at",
	"SYS_open_by_handle_at",
	"SYS_clock_adjtime",
	"SYS_syncfs",
	"SYS_sendmmsg",
	"SYS_setns",
	"SYS_getcpu",
	"SYS_process_vm_readv",
	"SYS_process_vm_writev",
	"SYS_kcmp",
	"SYS_finit_module",
	"SYS_sched_setattr",
	"SYS_sched_getattr",
	"SYS_renameat2",
	"SYS_seccomp",
	"SYS_getrandom",
	"SYS_memfd_create",
	"SYS_kexec_file_load",
	"SYS_bpf",
	"SYS_execveat",
	"SYS_userfaultfd",
	"SYS_membarrier",
	"SYS_mlock2",
	"SYS_copy_file_range",
	"SYS_preadv2",
	"SYS_pwritev2",
	"SYS_pkey_mprotect",
	"SYS_pkey_alloc",
	"SYS_pkey_free",
	"SYS_statx"
};

static_assert(NUM_DEFAULT_XATTR == 10, "");
const char *default_xattr[] = {
	"system.posix_acl_access",
	"system.posix_acl_default",
	"system.advise",
	"system.sockprotoname",
	"user.sslab",
	"trusted.sslab",
	"security.evm", 
	"security.ima", 
	"security.selinux", 
	"security.capability"
};

static_assert(NUM_DEFAULT_XATTR_PREFIX == 5, "");
const char *default_xattr_prefix[] = {
	"system.", 
	"trusted.", 
	"security.", 
	"user.", 
	"btrfs."
	// "osx.", 
	// "os2."
};
